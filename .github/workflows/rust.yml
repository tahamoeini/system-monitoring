name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: moonrepo/setup-rust@v1
        with:
          profile: minimal
          override: true

      - name: Install dependencies
        run: cargo fetch

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history for proper commit filtering

      - name: Determine next version
        id: version
        uses: mgoltzsche/conventional-release@v0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          auto-release: false
          release-branch: main
          ignore-commits-before: "2022-01-01" # Adjust this date to a valid history point
          update-major-tag: false
          github-release-enabled: true
          github-release-draft: false
          github-release-latest: true
          ref: refs/heads/main
      

      - name: Update Cargo.toml version
        if: steps.version.outputs.publish == 'true'
        run: |
          VERSION=${{ steps.version.outputs.version }}
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml
          git add Cargo.toml
          git commit -m "chore: bump version to $VERSION"
          git push origin main

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Create GitHub Release
        if: steps.version.outputs.publish == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          files: target/release/your_actual_executable_name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
